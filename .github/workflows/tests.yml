name: Tests

on:
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

# Cancel any in-progress CI runs for a PR if it is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  check_compilation:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cc: [gcc]
        nvim_tag: [nightly]

    name: Run tests
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.cc }}
    steps:
      - uses: actions/checkout@v4
      - uses: tree-sitter/setup-action/cli@v1

      - name: Test Dependencies
        run: |
          mkdir -p ~/.local/share/nvim/site/pack/ci/start
          cd ~/.local/share/nvim/site/pack/ci/start
          git clone https://github.com/nvim-lua/plenary.nvim
          git clone -b main https://github.com/nvim-treesitter/nvim-treesitter.git
          cp nvim-treesitter/lua/nvim-treesitter/parsers.lua ~/work/nvim-treesitter-textobjects/nvim-treesitter-textobjects/

      - name: Install and prepare Neovim
        env:
          NVIM_TAG: ${{ matrix.nvim_tag }}
        run: |
          bash ./scripts/ci-install-${{ matrix.os }}.sh

      - name: Setup Parsers Cache
        id: parsers-cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/nvim/site/parser/
          key: parsers-${{ hashFiles('parsers.lua') }}

      - name: Compile parsers Unix like
        if: ${{ steps.parsers-cache.outputs.cache-hit != 'true' }}
        run: nvim -l scripts/install_parsers.lua all

      - name: Tests
        run: PATH=/usr/local/bin:$PATH ./scripts/run_tests.sh
